{
  "_args": [
    [
      {
        "raw": "lazy-ass@1.3.0",
        "scope": null,
        "escapedName": "lazy-ass",
        "name": "lazy-ass",
        "rawSpec": "1.3.0",
        "spec": "1.3.0",
        "type": "version"
      },
      "/Users/isaabo-mohana/Desktop/NodeExpress/expressFB/node_modules/really-need"
    ]
  ],
  "_from": "lazy-ass@1.3.0",
  "_id": "lazy-ass@1.3.0",
  "_inCache": true,
  "_location": "/lazy-ass",
  "_nodeVersion": "4.2.2",
  "_npmUser": {
    "name": "bahmutov",
    "email": "gleb.bahmutov@gmail.com"
  },
  "_npmVersion": "2.14.14",
  "_phantomChildren": {},
  "_requested": {
    "raw": "lazy-ass@1.3.0",
    "scope": null,
    "escapedName": "lazy-ass",
    "name": "lazy-ass",
    "rawSpec": "1.3.0",
    "spec": "1.3.0",
    "type": "version"
  },
  "_requiredBy": [
    "/really-need"
  ],
  "_resolved": "https://registry.npmjs.org/lazy-ass/-/lazy-ass-1.3.0.tgz",
  "_shasum": "7d0d14eef3ec9702c6f30c60ea81f1a8d3f900fb",
  "_shrinkwrap": null,
  "_spec": "lazy-ass@1.3.0",
  "_where": "/Users/isaabo-mohana/Desktop/NodeExpress/expressFB/node_modules/really-need",
  "author": {
    "name": "Gleb Bahmutov",
    "email": "gleb.bahmutov@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/bahmutov/lazy-ass/issues"
  },
  "config": {
    "pre-git": {
      "commit-msg": "validate-commit-msg",
      "pre-commit": [
        "npm test"
      ],
      "pre-push": [
        "npm run size"
      ],
      "post-commit": [],
      "post-merge": []
    }
  },
  "contributors": [],
  "dependencies": {},
  "description": "Lazy assertions without performance penalty",
  "devDependencies": {
    "@semantic-release/condition-travis": "4.1.4",
    "bad-line": "0.1.1",
    "condition-node-version": "1.2.0",
    "coveralls": "2.11.4",
    "expect.js": "0.3.1",
    "git-issues": "1.2.0",
    "grunt": "0.4.5",
    "grunt-banner": "0.6.0",
    "grunt-clean-console": "0.1.1",
    "grunt-cli": "0.1.13",
    "grunt-contrib-concat": "0.5.1",
    "grunt-contrib-copy": "0.8.2",
    "grunt-contrib-jshint": "0.11.3",
    "grunt-contrib-uglify": "0.11.0",
    "grunt-contrib-watch": "0.6.1",
    "grunt-deps-ok": "0.9.0",
    "grunt-gh-pages": "1.0.0",
    "grunt-karma": "0.10.1",
    "grunt-mocha-test": "0.12.7",
    "grunt-nice-package": "0.10.1",
    "grunt-npm2bower-sync": "0.9.1",
    "jshint-stylish": "2.1.0",
    "karma": "0.12.32",
    "karma-chrome-launcher": "0.2.2",
    "karma-coverage": "0.5.3",
    "karma-mocha": "0.2.1",
    "karma-phantomjs-launcher": "0.2.1",
    "matchdep": "1.0.0",
    "mocha": "2.3.4",
    "pkgfiles": "2.3.0",
    "pre-git": "1.4.0",
    "semantic-release": "6.0.3",
    "time-grunt": "1.2.2"
  },
  "directories": {},
  "dist": {
    "shasum": "7d0d14eef3ec9702c6f30c60ea81f1a8d3f900fb",
    "tarball": "https://registry.npmjs.org/lazy-ass/-/lazy-ass-1.3.0.tgz"
  },
  "engines": {
    "node": "> 0.8"
  },
  "files": [
    "index.js",
    "index.html",
    "bower.json",
    "test/demo.js"
  ],
  "gitHead": "e4ef03e454825af8603edf37389982843731bca5",
  "homepage": "https://github.com/bahmutov/lazy-ass",
  "keywords": [
    "assertion",
    "assertions",
    "browser",
    "debugging",
    "defensive",
    "lazy",
    "node"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "bahmutov",
      "email": "gleb.bahmutov@gmail.com"
    }
  ],
  "name": "lazy-ass",
  "optionalDependencies": {},
  "readme": "# lazy-ass\n\n> Lazy assertions without performance penalty\n\n[![NPM][lazy-ass-icon] ][lazy-ass-url]\n\n[![Build status][lazy-ass-ci-image] ][lazy-ass-ci-url]\n[![manpm](https://img.shields.io/badge/manpm-compatible-3399ff.svg)](https://github.com/bahmutov/manpm)\n[![dependencies][lazy-ass-dependencies-image] ][lazy-ass-dependencies-url]\n[![devdependencies][lazy-ass-devdependencies-image] ][lazy-ass-devdependencies-url]\n\n[![semantic-release][semantic-image] ][semantic-url]\n[![Coverage Status][lazy-ass-coverage-image]][lazy-ass-coverage-url]\n[![Codacy][lazy-ass-codacy-image]][lazy-ass-codacy-url]\n[![Code Climate][lazy-ass-code-climate-image]][lazy-ass-code-climate-url]\n\n[Demo](http://glebbahmutov.com/lazy-ass/)\n\nIs the current code breaking dependencies if released?\n[![Dont-break][circle-ci-image] ][circle-ci-url] - checks using\n[dont-break](https://github.com/bahmutov/dont-break)\n[circle-ci-image]: https://circleci.com/gh/bahmutov/lazy-ass.svg?style=svg\n[circle-ci-url]: https://circleci.com/gh/bahmutov/lazy-ass\n\n## Example\n\nRegular assertions evaluate all arguments and concatenate message\nEVERY time, even if the condition is true.\n\n```js\nconsole.assert(typeof foo === 'object',\n  'expected ' + JSON.stringify(foo, null, 2) + ' to be an object');\n```\n\nLazy assertion function evaluates its arguments and forms\na message ONLY IF the condition is false\n\n```js\nlazyAss(typeof foo === 'object', 'expected', foo, 'to be an object');\n```\n\nConcatenates strings, stringifies objects, calls functions - only if\ncondition is false.\n\n```js\nfunction environment() {\n  // returns string\n}\nvar user = {} // an object\nlazyAsync(condition, 'something went wrong for', user, 'in', environment);\n// throws an error with message equivalent of\n// 'something went wrong for ' + JSON.stringify(user) + ' in ' + environment()\n```\n\n## Why?\n\n* Passing an object reference to a function is about\n[2000-3000 times faster](http://jsperf.com/object-json-stringify)\nthan serializing an object and passing it as a string.\n* Concatenating 2 strings before passing to a function is about\n[30% slower](http://jsperf.com/string-concat-vs-pass-string-reference)\nthan passing 2 separate strings.\n\n## Install\n\nNode: `npm install lazy-ass --save` then `var la = require('lazy-ass');`.\nYou can attach the methods to the global object using\n`require('lazy-ass').globalRegister();`.\n\nBrowser: `bower install lazy-ass --save`, include `index.js`,\nattaches functions `lazyAss` and `la` to `window` object.\n\n## Notes\n\nYou can pass as many arguments to *lazyAss* after the condition. The condition\nwill be evaluated every time (this is required for any assertion). The rest of arguments\nwill be concatenated according to rules\n\n* string will be left unchanged.\n* function will be called and its output will be concatenated.\n* any array or object will be JSON stringified.\n\nThere will be single space between the individual parts.\n\n## Lazy async assertions\n\nSometimes you do not want to throw an error synchronously, breaking the entire\nexecution stack. Instead you can throw an error asynchronously using `lazyAssync`,\nwhich internally implements logic like this:\n\n```js\nif (!condition) {\n  setTimeout(function () {\n    throw new Error('Conditions is false!');\n  }, 0);\n}\n```\n\nThis allows the execution to continue, while your global error handler (like\nmy favorite [Sentry](http://glebbahmutov.com/blog/know-unknown-unknowns-with-sentry/))\ncan still forward the error with all specified information to your server.\n\n```js\nlazyAss.async(false, 'foo');\nconsole.log('after assync');\n// output\nafter assync\nUncaught Error: foo\n```\n\nIn this case, there is no meaningful error stack, so use good message\narguments - there is no performance penalty!\n\n## Predicate function as a condition\n\nTypically, JavaScript evaluates the condition expression first, then calls *lazyAss*.\nThis means the function itself sees only the true / false result, and not the expression\nitself. This makes makes the error messages cryptic\n\n    lazyAss(2 + 2 === 5);\n    // Error\n\nWe usually get around this by giving at least one additional message argument to\nexplain the condition tested\n\n    lazyAss(2 + 2 === 5, 'addition')\n    // Error: addition\n\n*lazyAss* has a better solution: if you give a function that evaluates the condition\nexpression, if the function returns false, the error message will include the source\nof the function, making the extra arguments unnecessary\n\n    lazyAss(function () { return 2 + 2 === 5; });\n    // Error: function () { return 2 + 2 === 5; }\n\nThe condition function has access to any variables in the scope, making it extremely\npowerful\n\n    var foo = 2, bar = 2;\n    lazyAss(function () { return foo + bar === 5; });\n    // Error: function () { return foo + bar === 5; }\n\nIn practical terms, I recommend using separate predicates function and\npassing relevant values to the *lazyAss* function. Remember, there is no performance\npenalty!\n\n    var foo = 2, bar = 2;\n    function isValidPair() {\n      return foo + bar === 5;\n    }\n    lazyAss(isValidPair, 'foo', foo, 'bar', bar);\n    // Error: function isValidPair() {\n    //   return foo + bar === 5;\n    // } foo 2 bar 2\n\n## Testing\n\nThis library is fully tested under Node and inside browser environment (CasperJs).\nI described how one can test asynchronous assertion throwing in your own projects\nusing Jasmine in [a blog post](http://glebbahmutov.com/blog/testing-async-lazy-assertion/).\n\n### Small print\n\nAuthor: Gleb Bahmutov &copy; 2014\n\n* [@bahmutov](https://twitter.com/bahmutov)\n* [glebbahmutov.com](http://glebbahmutov.com)\n* [blog](http://glebbahmutov.com/blog)\n\nLicense: MIT - do anything with the code, but don't blame me if it does not work.\n\nSpread the word: tweet, star on github, etc.\n\nSupport: if you find any problems with this module, email / tweet /\n[open issue](https://github.com/bahmutov/lazy-ass/issues) on Github\n\n## MIT License\n\nCopyright (c) 2014 Gleb Bahmutov\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\n[lazy-ass-icon]: https://nodei.co/npm/lazy-ass.png?downloads=true\n[lazy-ass-url]: https://npmjs.org/package/lazy-ass\n[lazy-ass-ci-image]: https://travis-ci.org/bahmutov/lazy-ass.png?branch=master\n[lazy-ass-ci-url]: https://travis-ci.org/bahmutov/lazy-ass\n[lazy-ass-coverage-image]: https://coveralls.io/repos/bahmutov/lazy-ass/badge.png\n[lazy-ass-coverage-url]: https://coveralls.io/r/bahmutov/lazy-ass\n[lazy-ass-code-climate-image]: https://codeclimate.com/github/bahmutov/lazy-ass/badges/gpa.svg\n[lazy-ass-code-climate-url]: https://codeclimate.com/github/bahmutov/lazy-ass\n[lazy-ass-codacy-image]: https://www.codacy.com/project/badge/b60a0810c9af4fe4b2ae685932dbbdb8\n[lazy-ass-codacy-url]: https://www.codacy.com/public/bahmutov/lazy-ass.git\n[lazy-ass-dependencies-image]: https://david-dm.org/bahmutov/lazy-ass.png\n[lazy-ass-dependencies-url]: https://david-dm.org/bahmutov/lazy-ass\n[lazy-ass-devdependencies-image]: https://david-dm.org/bahmutov/lazy-ass/dev-status.png\n[lazy-ass-devdependencies-url]: https://david-dm.org/bahmutov/lazy-ass#info=devDependencies\n[semantic-image]: https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg\n[semantic-url]: https://github.com/semantic-release/semantic-release\n",
  "readmeFilename": "README.md",
  "release": {
    "verifyConditions": [
      {
        "path": "@semantic-release/condition-travis"
      },
      {
        "path": "condition-node-version",
        "node": "4.2.2"
      }
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bahmutov/lazy-ass.git"
  },
  "scripts": {
    "build": "grunt",
    "commit": "git-issues && commit-wizard",
    "coveralls": "cat coverage/PhantomJS*/lcov.info | ./node_modules/coveralls/bin/coveralls.js",
    "demo": "grunt gh-pages",
    "dont-break": "dont-break --timeout 30",
    "issues": "git-issues",
    "mocha": "mocha test/*.spec.js",
    "pkgfiles": "pkgfiles",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post",
    "size": "tarball=\"$(npm pack .)\"; wc -c \"${tarball}\"; tar tvf \"${tarball}\"; rm \"${tarball}\";",
    "test": "grunt test",
    "watch": "grunt watch"
  },
  "version": "1.3.0"
}
